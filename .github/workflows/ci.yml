name: CI

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: muhasebe
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d muhasebe"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      NODE_ENV: test
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: "5432"
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: muhasebe
      PORT: "3000"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Install PostgreSQL client (for pg_isready)
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        env:
          PGPASSWORD: postgres
        run: |
          for i in {1..30}; do
            pg_isready -h 127.0.0.1 -p 5432 -U postgres && echo "Postgres is ready" && break
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Run DB migrations
        working-directory: backend
        run: npm run migrate

      - name: Lint
        working-directory: backend
        run: npm run lint

      - name: Prettier check
        working-directory: backend
        run: npm run format:check

      - name: Test
        working-directory: backend
        run: npm run test:ci

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: backend/coverage